services:
  postgresdb:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    env_file:
      - .env

  synapse:
    image: matrixdotorg/synapse:latest
    restart: unless-stopped
    volumes:
      - ./synapse:/data
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.synapse.loadbalancer.server.port=${SYNAPSE_PORT}"
      - "traefik.http.routers.synapse.rule=Host(`${SYNAPSE_SERVER_NAME}`)"
      - "traefik.http.routers.synapse.entrypoints=websecure,matrix"
      - "traefik.http.routers.synapse.tls=true"
      - "traefik.http.routers.synapse.tls.certresolver=default"

  element:
    image: vectorim/element-web:latest
    restart: unless-stopped
#    volumes:
#      - ./element-config.json:/app/config.json
    labels:
      - "traefik.http.routers.element.rule=Host(`${ELEMENT_SERVER_NAME}`)"
      - "traefik.http.routers.element.entrypoints=websecure"
      - "traefik.http.routers.element.tls=true"
      - "traefik.http.routers.element.tls.certresolver=default"

  # Nginx to serve .well-known files
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/well-known:/usr/share/nginx/html/.well-known
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`${SYNAPSE_SERVER_NAME}`) && PathPrefix(`/.well-known`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls=true"
      - "traefik.http.routers.nginx.tls.certresolver=default"